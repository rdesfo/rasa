# generated by cabal-rpm-0.11
# https://fedoraproject.org/wiki/Packaging:Haskell

%global pkg_name rasa

%bcond_with tests

Name:           ghc-%{pkg_name}
Version:        0.1.12
Release:        1%{?dist}
Summary:        A modular text editor

License:        GPLv3+
Url:            https://hackage.haskell.org/package/%{pkg_name}
Source0:        https://hackage.haskell.org/package/%{pkg_name}-%{version}/%{pkg_name}-%{version}.tar.gz

BuildRequires:  ghc-Cabal-devel
BuildRequires:  ghc-rpm-macros
# Begin cabal-rpm deps:
BuildRequires:  ghc-async-devel
BuildRequires:  ghc-bifunctors-devel
BuildRequires:  ghc-containers-devel
BuildRequires:  ghc-data-default-devel
BuildRequires:  ghc-eve-devel
BuildRequires:  ghc-free-devel
BuildRequires:  ghc-hspec-devel
BuildRequires:  ghc-lens-devel
BuildRequires:  ghc-mtl-devel
BuildRequires:  ghc-profunctors-devel
BuildRequires:  ghc-text-devel
BuildRequires:  ghc-text-lens-devel
BuildRequires:  ghc-transformers-devel
BuildRequires:  ghc-yi-rope-devel
%if %{with tests}
BuildRequires:  ghc-QuickCheck-devel
BuildRequires:  ghc-quickcheck-instances-devel
%endif
# End cabal-rpm deps

%description
A modular text editor This is only a snippet, see the project's
<https://github.com/ChrisPenner/rasa README>.

Rasa is a text editor project with a few interesting goals. For better or worse
it attempts to be as modular as possible. This means that most functionality
which would typically be considered to be 'core' in other editors is
implemented as extensions in Rasa. This approach comes with its own share of
pros and cons, for instance:

/Pros/

* Implementing most core functionality as extensions ensures a powerful and
elegant extension interface.

* Flexibility; don't like the default cursor implementation? Write your own!

* Adaptability; the core of Rasa is miniscule, you can mix and match extensions
to build any editor you want.

/Cons/

* Module cross-dependencies makes the community infrastructure more fragile;
We'll likely have to develop a solution to this as a community as time goes on.

* Fragmentation; Not having a single implementation for a given feature means
extensions that depend on a feature have to pick a specific implementation to
augment. Over time data-structures and types will be standardized into Rasa's
core to help alleviate this.

While highly experimental, I've found the current API to be quite expressive
and adaptable; for instance I was able to implement the notion of multiple
cursors using the extension API in less than a day. I hope to keep the learning
curve low as development continues.

/Getting Started/

First clone the <https://github.com/ChrisPenner/rasa Github repo> and try
running the example-config included there. Once you get it running (see the
<https://github.com/ChrisPenner/rasa/blob/master/README.md README>) then you
can customize your keymap to add a few mappings you like. Then I'd check out
the
<https://github.com/ChrisPenner/rasa/blob/master/docs/Building-An-Extension.md
Building your own extensions guide>. It goes in depth into everything you'd
want to know!

If you have any issues (and I'm sure there'll be a few; it's a new project!)
please report them <https://github.com/ChrisPenner/rasa/issues here> and we'll
talk about it!.


%package devel
Summary:        Haskell %{pkg_name} library development files
Provides:       %{name}-static = %{version}-%{release}
Requires:       ghc-compiler = %{ghc_version}
Requires(post): ghc-compiler = %{ghc_version}
Requires(postun): ghc-compiler = %{ghc_version}
Requires:       %{name}%{?_isa} = %{version}-%{release}

%description devel
This package provides the Haskell %{pkg_name} library development files.


%prep
%setup -q -n %{pkg_name}-%{version}


%build
%ghc_lib_build


%install
%ghc_lib_install


%check
%cabal_test


%post devel
%ghc_pkg_recache


%postun devel
%ghc_pkg_recache


%files -f %{name}.files
%license LICENSE


%files devel -f %{name}-devel.files
%doc README.md


%changelog
* Fri Apr 28 2017 Fedora Haskell SIG <haskell@lists.fedoraproject.org> - 0.1.12-1
- spec file generated by cabal-rpm-0.11
